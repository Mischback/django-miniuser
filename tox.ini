# tox configuration for django-miniuser

[tox]
envlist =
    py27-django{110,111},
    py{34,35,36}-django{110,111,20},
    flake8
    coverage-report

# don't require a setup.py
skipsdist = true

# don't stop on missing interpreters
skip_missing_interpreters = true

[testenv]
# TODO: This may have to be changed, once we're switching to testing the actual distribution
setenv = PYTHONDONTWRITEBYTECODE=1
deps =
    coverage
    django110: Django>=1.10, <1.11
    django111: Django>=1.11, <2.0
    django20: Django>=2.0b1, <2.1
    # TODO: letzter Test: define the deps here...
    # TODO: Look into tox-source code, try to determine how the "recreation-logic" is working and fix it...
    # util: flake8
    # util: isort
    # util: flake8-isort
    # util: Django>2.0b1
commands =
    coverage run --parallel tests/runtests.py

[testenv:util]
basepython = python3
envdir = {toxworkdir}/util
deps =
    coverage
    flake8
    isort
    flake8-isort
    Django>2.0b1
commands =
    {posargs:coverage run --parallel tests/runtests.py}

[testenv:coverage-report]
# basepython = python3
envdir = {toxworkdir}/util
deps =
    coverage
    flake8
    isort
    flake8-isort
    Django>2.0b1
commands =
    coverage combine
    # coverage html
    {posargs:coverage report}

[testenv:flake8]
# basepython = python3
envdir = {toxworkdir}/util
deps =
    coverage
    flake8
    isort
    flake8-isort
    Django>2.0b1
commands =
    flake8 . {posargs}

[testenv:isort]
# basepython = python3
envdir = {toxworkdir}/util
deps =
    coverage
    flake8
    isort
    flake8-isort
    Django>2.0b1
commands =
    isort . --recursive {posargs}


[coverage:run]
# This sections sets the options for coverage collecting
branch = True
source =
    miniuser
    tests
omit =
    */__init__.py
    */migrations/*
    */tests/utils/*
    */tests/runtests.py

[coverage:report]
# This sections sets the options for coverage reporting
precision = 1
show_missing = True
fail_under = 90

[flake8]
# This section actually sets the options for flake8

exclude =
    .git,
    .tox,
    migrations,
    settings_dev.py,
    settings_test.py,

# as per Django's Coding Style
# see https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/coding-style/
max-line-length = 119

ignore =
    # as per Django's Coding Style
    W601,

# Build an own format string
# TODO: This is not working, because of distutil or pip. Some strange exception
#   is raised, presumably because of some Interpolation.
#   This bug seems to be around for at least 2 years, not fixed yet. So probably
#   a fix is breaking something elsewhere.
#   However, the custom format can be uncommented, if no package is to be installed
# format = %(code)s %(path)s::%(row)s %(text)s

[isort]
# This section actually sets the options for isort

# these settings are taken from Django's isort configuration
# see https://github.com/django/django/blob/2.0.2/setup.cfg
combine_as_imports = True
default_section = THIRDPARTY
include_trailing_comma = True
line_length = 79
multi_line_output = 5
not_skip = __init__.py

# project specific isort options
known_first_party = miniuser
known_django = django
sections = FUTURE, STDLIB, DJANGO, THIRDPARTY, FIRSTPARTY, LOCALFOLDER
import_heading_stdlib = Python imports
import_heading_django = Django imports
import_heading_firstparty = app imports
import_heading_localfolder = app imports
import_heading_thirdparty = external imports
skip_glob =
    .tox,
    */migrations/*
    settings_dev.py
    settings_test.py
